--1. BANKING MANAGEMENT SYSTEM. Write a PL/SQL block to CONVERT THE SALARY 
--ACCOUNT TYPE TO SAVINGS ACCOUNT FOR THE GIVEN CUSTOMER ID.
DECLARE
    C ACCOUNT_INFO_2605%ROWTYPE;
BEGIN
    UPDATE ACCOUNT_INFO_2605 SET ACCOUNT_TYPE='SAVINGS' 
    WHERE ACCOUNT_TYPE LIKE 'SALARY' AND CUSTOMER_ID=&ID;
    IF SQL%FOUND THEN 
    DBMS_OUTPUT.PUT_LINE('RECORD UPDATED');
    DBMS_OUTPUT.PUT_LINE('ACCOUNT_TYPE = '|| C.ACCOUNT_TYPE ||' '||'CUSTOMER_ID = '||C.CUSTOMER_ID);
    ELSE
    DBMS_OUTPUT.PUT_LINE('RECORD NOT FOUND');
    END IF;
END;

---------------------------------------------------------------------------------------------
--2. BMS - TO CHANGE THE IFSC OF  ICICI OF TNAGAR
BEGIN
    UPDATE BANK_INFO_2605 
    SET IFSC_CODE = 'ICITN0765' 
    WHERE BANK_NAME ='ICICI' AND BRANCH_NAME ='TNAGAR';
    DBMS_OUTPUT.PUT_LINE('IFSC_CODE UPDATED');
END;
------------------------------------------------------------------------------------------------
--3. WRITE A BLOCK TO INITIATE FUND TRANSFER FOR USER TO BENEFICIARY USER. 
--4. WRITE A BLOCK WHO AVAILS DISCOUNT BASED ON TRANSACTION ON SAME BANKING TRANSACTIONS
-----------------------------------------------------------------------------------------------
--5. WRITE A BLOCK TO LIST THE SENIOR CITIZEN - ACCOUNT HOLDERS 
DECLARE
    CURSOR C IS
        SELECT CUSTOMER_NAME 
        FROM CUSTOMER_PERSONAL_INFO_2605
        WHERE TO_CHAR(DATE_OF_BIRTH,'YYYY')<1970;
        L_NAME CUSTOMER_PERSONAL_INFO_2605.CUSTOMER_NAME%TYPE;
BEGIN
    OPEN C;
    LOOP
        FETCH C INTO L_NAME;
        EXIT WHEN C%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(L_NAME);
    END LOOP;
    CLOSE C;
END;
--------------------------------------------------------------------------------------------       
--6. WRITE A BLOCK TO CHANGE THE ACCOUNT HOLDERS BRANCH.(INCLUDING IFSC) FOR THE GIVEN ACCOUNT HOLDER
BEGIN 
    UPDATE BANK_INFO_2605 
    SET IFSC_CODE='SBIDN0343',BRANCH_NAME='MYLAPORE'
    WHERE BANK_NAME ='SBI';
    DBMS_OUTPUT.PUT_LINE('IFSC_CODE UPDATED');
END;
-------------------------
BEGIN
    UPDATE ACCOUNT_INFO_2605
    SET IFSC_CODE='SBIDN0343'
    WHERE CUSTOMER_ID=&ID;
    DBMS_OUTPUT.PUT_LINE('IFSC_CODE UPDATED');
END;
------------------------------------------------------------------------------
--7. WRITE A BLOCK TO CHECK THE ACCOUNT HOLDER NAME AND TO ADD THE NOMIEE NAME 
--FOR THE SENIOR CITIZEN - AFTER 10 YEARS OF ACCOUNT OPENING YEAR
--(EXTRACT SENIOR CITIZEN LIST,
--EXTRACT THE YEAR OF ACCOUNT OPENING,
--CREATE TABLE TO MAP NOMINEE NAME AND SENIOR CITIZEN PK,
--ADD THE NOMINEE NAME)
------------------------------------------------------------------------------
--8. DISPLAY THE NAME OF THE EMPLOYEES AND THE NUMBER OF RECORDS USING CURSOR AND CURSOR LOOP
DECLARE
    CURSOR A IS
        SELECT CUSTOMER_NAME FROM CUSTOMER_PERSONAL_INFO_2605;
        NAME_L CUSTOMER_PERSONAL_INFO_2605.CUSTOMER_NAME%TYPE;
        R_NUM NUMBER(20):=0;
BEGIN
    OPEN A;
    LOOP
        FETCH A INTO NAME_L;
        EXIT WHEN A%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(NAME_L);
        R_NUM:=R_NUM + 1;
    END LOOP;
    DBMS_OUTPUT.PUT_LINE('Number of Records'||':'||R_NUM);
    CLOSE A;
END;
------------------------------------------------------------------------------------
--9. Write a procedure to increase the salary of all the employees by 5000 using FORALL.
DECLARE
    CURSOR C IS
        SELECT SALARY FROM XX_EMPLOYEE_2610;
        SAL XX_EMPLOYEE_2610.SALARY%TYPE;
        SLRY XX_EMPLOYEE_2610.SALARY%TYPE;
BEGIN
    OPEN C;
    FETCH C INTO SAL;
    FOR TEMP IN 1..50
    LOOP
        SLRY := SAL+5000;
        EXIT WHEN C%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE('SALARY'||':'||SLRY);
    END LOOP;
    DBMS_OUTPUT.PUT_LINE('SALARY'||':'||SLRY);
    CLOSE C;
END;
    
-------------------
CREATE OR REPLACE PROCEDURE adjust_salary(
EMPL_ID XX_EMPLOYEE_2610.EMP_ID%TYPE  
)
IS
SALRY XX_EMPLOYEE_2610%ROWTYPE;
BEGIN
    UPDATE XX_EMPLOYEE_2610
    SET SALARY = SALARY+'5000'
    WHERE EMP_ID=EMPL_ID;
    IF SQL%FOUND THEN
        DBMS_OUTPUT.PUT_LINE('RECORD UPDATED');
    ELSE
        DBMS_OUTPUT.PUT_LINE('RECORD NOT FOUND');
    END IF;
END;
SELECT * FROM XX_EMPLOYEE_2610;        