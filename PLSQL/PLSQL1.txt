--1) Write a PL/SQL program to arrange the number of two variable in 
--such a way that the small number will store in num_small variable 
--and large number will store in num_large variable.
DECLARE
   NUM1 NUMBER;
   NUM2 NUMBER;
   NUM_SMALL NUMBER;
   NUM_LARGE NUMBER;
BEGIN
   NUM1 := 8;
   NUM2 := 22;
   IF (NUM1>NUM2) THEN
      NUM_LARGE := NUM1;
      NUM_SMALL := NUM2;
   ELSE
      NUM_LARGE := NUM2;
      NUM_SMALL := NUM1;
   END IF;
   DBMS_OUTPUT.PUT_LINE( 'NUM_LARGE' || ':' ||NUM_LARGE );
   DBMS_OUTPUT.PUT_LINE( 'NUM_SMALL' || ':' ||NUM_SMALL );
END;
------------------------------------------------------------------------------------------------
--2.Write a PL/SQL program to check whether a given character is letter or digit.
DECLARE
   CHAR_C VARCHAR2(50) := 'B';
   
BEGIN
   IF (CHAR_C >='A' AND CHAR_C <='Z') THEN 
   DBMS_OUTPUT.PUT_LINE( 'LETTER' );
   ELSIF (CHAR_C >='0' AND CHAR_C <='9') THEN
   DBMS_OUTPUT.PUT_LINE( 'DIGIT' );
   ELSE
   DBMS_OUTPUT.PUT_LINE( 'NEIGHTER LETTER NOR DIGIT' );
   END IF;
END;
-----------------------------------------------------------------------
--3.Write a program in PL/SQL to print the value of a variable inside and 
--outside a loop using LOOP WHEN EXIT statement.
DECLARE 
   NUM1 NUMBER := '0';
BEGIN
   LOOP
      NUM1 := NUM1 + 1;
      EXIT WHEN NUM1 > '5';
         dbms_output.put_line( 'Inside loop: ' || NUM1 );
   END LOOP;
      dbms_output.put_line( 'After loop: ' || NUM1 );
END; 
-----------------------------------------------------------
--4.Write a PL/SQL program to display which day is a specific date
DECLARE 
   DT DATE := TO_DATE('18-MAY-2021','DD-MON-YYYY');
   DT_DAY VARCHAR(1);

BEGIN
   DT_DAY := TO_CHAR(DT,'D');
CASE DT_DAY
WHEN '1' THEN
DBMS_OUTPUT.PUT_LINE('SUNDAY');
WHEN '2' THEN
DBMS_OUTPUT.PUT_LINE('MONDAY');
WHEN '3' THEN
DBMS_OUTPUT.PUT_LINE('TUESDAY');
WHEN '4' THEN
DBMS_OUTPUT.PUT_LINE('WEDNESDAY');
WHEN '5' THEN
DBMS_OUTPUT.PUT_LINE('THURSDAY');
WHEN '6' THEN
DBMS_OUTPUT.PUT_LINE('SATURDAY');
END CASE;
END;

-------------------------------------------------------------------------
--5.Write a PL/SQL procedure to calculate the incentive on a specific target 
--otherwise a general incentive to be paid using IF-THEN-ELSE.
DECLARE
  PROCEDURE test1 (
    sal_achieve  NUMBER,
    target_qty  NUMBER,
    emp_id NUMBER
  )
  IS
    incentive   NUMBER := 0;

  BEGIN
    IF sal_achieve > (target_qty + 200) THEN
      incentive := (sal_achieve - target_qty)/4;
ELSE
 incentive :=75;
END IF;
DBMS_OUTPUT.PUT_LINE ('incentive = ' || incentive);
      UPDATE EMPLOYEES_21
      SET salary = salary + incentive 
      WHERE employee_id = emp_id;
   
  END test1;
BEGIN
  test1(2300, 2000, 100);
  test1(3600, 3000, 101);
END;
---------------------------------------------------------------------------

--6.Write a PL/SQL block to calculate the incentive of an employee whose ID is 110.
DECLARE
  INCENTIVE   NUMBER(20);
BEGIN
  SELECT SALARY * 0.6 INTO INCENTIVE
  FROM XX_EMPLOYEE_2610
  WHERE EMP_ID = 104;
 DBMS_OUTPUT.PUT_LINE('INCENTIVE  = ' || INCENTIVE);
END;

----------------------------------------------------------------------------------------
--7. Write a block to display name, contact no and no of rows from employee table.

DECLARE 
      CURSOR E IS
      SELECT
      EMP_NAME, CONTACT_NO
      FROM XX_EMPLOYEE_2610;
      EMP_NAME XX_EMPLOYEE_2610.EMP_NAME%TYPE;
      CONTACT_NO XX_EMPLOYEE_2610.CONTACT_NO%TYPE;
      R_NUM NUMBER:=0;
BEGIN
    OPEN E;
    LOOP
    FETCH E
    INTO EMP_NAME, CONTACT_NO;
    EXIT WHEN E%NOTFOUND;
    R_NUM := R_NUM + 1;
    DBMS_OUTPUT.PUT_LINE(EMP_NAME || ' : ' || CONTACT_NO );
    END LOOP;
    DBMS_OUTPUT.PUT_LINE('NUMBER OF RECORDS :'||R_NUM);
END;
-----------------------------------------------------------------------------
--8.To develop a procedure named adjust_salary() sample database.
-- Weâ€™ll update the salary information of employees in the employees table by 
--using SQL UPDATE statement.
CREATE OR REPLACE PROCEDURE adjust_salary(
EMPL_ID XX_EMPLOYEE_2610.EMP_ID%TYPE  
)
IS
SALRY XX_EMPLOYEE_2610%ROWTYPE;
BEGIN
    UPDATE XX_EMPLOYEE_2610
    SET SALARY = 15000
    WHERE EMP_ID=&ID;
    IF SQL%FOUND THEN
        DBMS_OUTPUT.PUT_LINE('RECORD UPDATED');
    ELSE
        DBMS_OUTPUT.PUT_LINE('RECORD NOT FOUND');
    END IF;
END;
